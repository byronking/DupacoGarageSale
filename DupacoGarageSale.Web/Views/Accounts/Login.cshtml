@model DupacoGarageSale.Data.Domain.AuthenticationInfo

@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_LoginLayout.cshtml";

    var passwordResetSuccessful = "hidden";
    if (TempData["PasswordResetSuccessful"] != null)
    {
        passwordResetSuccessful = TempData["PasswordResetSuccessful"] as string;
    }
}

@Html.Partial("~/Views/Accounts/_ResetPassword.cshtml")


<div class="container">
    <div class="row" style="margin-top:40px;">
        <div class="col-md-offset-3 col-md-6 text-center">
            <div id="loginAlert" class="alert alert-danger" role="alert">
                <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
                <span class="sr-only">Error:</span>
                Enter a valid user name and password
            </div>
            <input type="hidden" id="hdnPasswordResetSuccessful" value="@passwordResetSuccessful" />
            <div id="passwordResetSuccessful" class="alert alert-success hidden" role="alert">
                <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
                <span class="sr-only">Reset successful:</span>
                Your password has been successfully reset. Log in with your new password.
            </div>
        </div>
    </div>
        
    <div class="row">
        <div class="col-md-offset-3 col-md-6">
            @using (Html.BeginForm("Login", "Accounts", FormMethod.Post, new { @class = "form-signin", @role = "form" }))
            {
                <h2 class="form-signin-heading">Please sign in</h2><br />
                <label for="txtUserName">User name</label>
                @Html.TextBoxFor(m => m.UserName, new { @class = "form-control seventy-percent", id="txtUserName", placeholder="User name", required="", autofocus="" })<br />
                    
                <label for="txtPassword">Password</label>
                @Html.TextBoxFor(m => m.Password, new { @class = "form-control", id="txtPassword", type="Password", placeholder="Password", required="" })
                <div class="checkbox invisible">
                    <label>
                        <input type="checkbox" value="remember-me">
                        Remember me
                    </label>
                </div>
                <button class="btn btn-lg btn-success btn-block" type="submit">Sign in</button>
            }
            <br />
            <div class="text-center">
                <fb:login-button autologoutlink="false"></fb:login-button>
				<div id="fb-root"></div>
            </div>
            <div class="text-center"><a href="#" data-toggle="modal" data-target=".reset-password-modal">Forgot password?</a></div>
        </div>
    </div>       
</div>

 <script>
     window.fbAsyncInit = function () {
         FB.init({
             appId: '1538676693053081',
             xfbml: true,
             version: 'v2.1'
         });

         // After your onload method has been called and initial login state has
         // already been determined. (See above about not using these during a page's
         // init function.)
         FB.Event.subscribe('auth.authResponseChange', auth_response_change_callback);
         FB.Event.subscribe('auth.statusChange', auth_status_change_callback);
     };

     (function (d, s, id) {
         var js, fjs = d.getElementsByTagName(s)[0];
         if (d.getElementById(id)) { return; }
         js = d.createElement(s); js.id = id;
         js.src = "//connect.facebook.net/en_US/sdk.js";
         fjs.parentNode.insertBefore(js, fjs);
     }(document, 'script', 'facebook-jssdk'));

     // In your JavaScript
     var auth_response_change_callback = function (response) {
         console.log("auth_response_change_callback");
         console.log(response);
     }

     var auth_status_change_callback = function (response) {
         console.log("auth_status_change_callback: " + response.status);

         if (response.status === 'unknown') {
             location.href = '@Url.Content("/Home/LogOut")';
         }

         if (response.status === 'connected') {
             signInFacebookUser();
         }
     }

     function signInFacebookUser() {
         //alert('signing in');
         console.log('Welcome!  Fetching your information.... ');
         FB.api('/me', function (response) { // This gets the user's profile info.
             console.log('Successful login for: ' + response.name);

             var id = response.id;
             var first_name = response.first_name;
             var last_name = response.last_name;
             var email = response.email;

             $.ajax({
                 url: '@Url.Content("~/Accounts/SignInFacebookUser/")',
                 type: 'POST',
                 contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                 data: { id: id, first_name: first_name, last_name: last_name, email: email },
                 dataType: 'json',
                 success: function (data) {
                     if (data.ok)

                         window.location = data.newurl;
                     else {
                         alert(data.message);
                     }
                 }
             });
         });
     }
</script>